{"ast":null,"code":"import axios from \"axios\";\n\n// Create an Axios instance with default configurations\nconst apiRequest = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  // Your backend API URL\n  withCredentials: true // Include credentials (cookies) in requests\n});\n\n// Add a request interceptor to manually set the token into cookies from localStorage\napiRequest.interceptors.request.use(config => {\n  // Retrieve the token from localStorage (where you saved it)\n  const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).token : null;\n\n  // If the token exists, set it in the cookie manually\n  if (token) {\n    // Set token in cookies (with an expiration date or session cookie)\n    document.cookie = `token=${token}; path=/; SameSite=Strict`; // Sets the token as a cookie\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Export the Axios instance to use it in other parts of the app\nexport default apiRequest;","map":{"version":3,"names":["axios","apiRequest","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","JSON","parse","document","cookie","error","Promise","reject"],"sources":["C:/Users/HP/Documents/PersonalProjects/CodingChallenge/employee-management/client/src/lib/apiRequest.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an Axios instance with default configurations\r\nconst apiRequest = axios.create({\r\n  baseURL: \"http://localhost:5000/api\", // Your backend API URL\r\n  withCredentials: true, // Include credentials (cookies) in requests\r\n});\r\n\r\n// Add a request interceptor to manually set the token into cookies from localStorage\r\napiRequest.interceptors.request.use(\r\n  (config) => {\r\n    // Retrieve the token from localStorage (where you saved it)\r\n    const token = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')).token : null;\r\n\r\n    // If the token exists, set it in the cookie manually\r\n    if (token) {\r\n      // Set token in cookies (with an expiration date or session cookie)\r\n      document.cookie = `token=${token}; path=/; SameSite=Strict`; // Sets the token as a cookie\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Export the Axios instance to use it in other parts of the app\r\nexport default apiRequest;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC9BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAH,UAAU,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAChCC,MAAM,IAAK;EACV;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAACF,KAAK,GAAG,IAAI;;EAElG;EACA,IAAIA,KAAK,EAAE;IACT;IACAK,QAAQ,CAACC,MAAM,GAAG,SAASN,KAAK,2BAA2B,CAAC,CAAC;EAC/D;EAEA,OAAOD,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,eAAef,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}