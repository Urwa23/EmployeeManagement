{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\PersonalProjects\\\\CodingChallenge\\\\employee-management\\\\client\\\\src\\\\routes\\\\absences\\\\viewAbsences\\\\ViewAbsencesPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TableComponent from '../../../components/table/Table';\nimport apiRequest from '../../../lib/apiRequest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewAbsencesPage() {\n  _s();\n  const [data, setData] = useState([]); // State to store fetched absence requests\n  const [loading, setLoading] = useState(true); // State to track loading\n  const [error, setError] = useState(null); // State to track errors\n\n  const columns = [\"From\", \"To\", \"Type\", \"State\", \"Substitute\"];\n\n  // Fetch absence requests from the backend\n  useEffect(() => {\n    const fetchAbsences = async () => {\n      try {\n        setLoading(true); // Start loading\n        const response = await apiRequest.get('/getAbsencesRequests');\n        const absences = response.data;\n\n        // Map the fetched data to the table structure\n        const formattedData = absences.map(absence => ({\n          From: new Date(absence.from).toLocaleDateString(),\n          // Format date\n          To: new Date(absence.to).toLocaleDateString(),\n          Type: absence.reason,\n          State: absence.status,\n          Substitute: absence.substitute || \"N/A\" // Handle missing substitute\n        }));\n        setData(formattedData); // Update the data state\n        setLoading(false); // Stop loading\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching absence requests:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch absences.');\n        setLoading(false); // Stop loading\n      }\n    };\n    fetchAbsences();\n  }, []); // Empty dependency array to fetch data on component mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Absences Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), \" \", !loading && !error && /*#__PURE__*/_jsxDEV(TableComponent, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewAbsencesPage, \"C4fiAW6C7RZgaKDoEXQgZpbuUZg=\");\n_c = ViewAbsencesPage;\nexport default ViewAbsencesPage;\nvar _c;\n$RefreshReg$(_c, \"ViewAbsencesPage\");","map":{"version":3,"names":["React","useEffect","useState","TableComponent","apiRequest","jsxDEV","_jsxDEV","ViewAbsencesPage","_s","data","setData","loading","setLoading","error","setError","columns","fetchAbsences","response","get","absences","formattedData","map","absence","From","Date","from","toLocaleDateString","To","to","Type","reason","State","status","Substitute","substitute","err","_err$response","_err$response$data","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/PersonalProjects/CodingChallenge/employee-management/client/src/routes/absences/viewAbsences/ViewAbsencesPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport TableComponent from '../../../components/table/Table';\r\nimport apiRequest from '../../../lib/apiRequest';\r\n\r\nfunction ViewAbsencesPage() {\r\n  const [data, setData] = useState([]); // State to store fetched absence requests\r\n  const [loading, setLoading] = useState(true); // State to track loading\r\n  const [error, setError] = useState(null); // State to track errors\r\n\r\n  const columns = [\"From\", \"To\", \"Type\", \"State\", \"Substitute\"];\r\n\r\n  // Fetch absence requests from the backend\r\n  useEffect(() => {\r\n    const fetchAbsences = async () => {\r\n      try {\r\n        setLoading(true); // Start loading\r\n        const response = await apiRequest.get('/getAbsencesRequests');\r\n        const absences = response.data;\r\n\r\n        // Map the fetched data to the table structure\r\n        const formattedData = absences.map((absence) => ({\r\n          From: new Date(absence.from).toLocaleDateString(), // Format date\r\n          To: new Date(absence.to).toLocaleDateString(),\r\n          Type: absence.reason,\r\n          State: absence.status,\r\n          Substitute: absence.substitute || \"N/A\", // Handle missing substitute\r\n        }));\r\n\r\n        setData(formattedData); // Update the data state\r\n        setLoading(false); // Stop loading\r\n      } catch (err) {\r\n        \r\n        console.error('Error fetching absence requests:', err);\r\n        setError(err.response?.data?.message || 'Failed to fetch absences.');\r\n        setLoading(false); // Stop loading\r\n      }\r\n    };\r\n\r\n    fetchAbsences();\r\n  }, []); // Empty dependency array to fetch data on component mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>Absences Overview</h1>\r\n      {loading && <p>Loading...</p>} {/* Show loading state */}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} {/* Show error message */}\r\n      {!loading && !error && (\r\n        <TableComponent columns={columns} data={data} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewAbsencesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}